import streamlit as st
import plotly.express as px

def display_customer_analysis(df_filtered):
    """
    Exibe anÃ¡lise de segmentaÃ§Ã£o de clientes
    """
    st.header("ğŸ‘¥ SegmentaÃ§Ã£o de Clientes")
    
    col1, col2 = st.columns(2)
    
    # AnÃ¡lise por tipo de cliente
    with col1:
        customer_type_analysis = df_filtered.groupby("Customer type").agg({
            "Total": ["sum", "mean", "count"],
            "Rating": "mean"
        }).round(2)
        customer_type_analysis.columns = ["Faturamento Total", "Ticket MÃ©dio", "NÂº TransaÃ§Ãµes", "AvaliaÃ§Ã£o MÃ©dia"]
        
        st.subheader("ğŸ“‹ AnÃ¡lise por Tipo de Cliente")
        st.dataframe(customer_type_analysis, use_container_width=True)
    
    # AnÃ¡lise por gÃªnero
    with col2:
        gender_analysis = df_filtered.groupby("Gender").agg({
            "Total": ["sum", "mean", "count"],
            "Rating": "mean"
        }).round(2)
        gender_analysis.columns = ["Faturamento Total", "Ticket MÃ©dio", "NÂº TransaÃ§Ãµes", "AvaliaÃ§Ã£o MÃ©dia"]
        
        st.subheader("ğŸ‘¤ AnÃ¡lise por GÃªnero")
        st.dataframe(gender_analysis, use_container_width=True)
    
    # GrÃ¡fico de distribuiÃ§Ã£o por tipo de cliente
    fig_customer = px.pie(
        df_filtered.groupby("Customer type")["Total"].sum().reset_index(),
        values="Total",
        names="Customer type",
        title="ğŸ’³ DistribuiÃ§Ã£o de Faturamento por Tipo de Cliente"
    )
    st.plotly_chart(fig_customer, use_container_width=True)
